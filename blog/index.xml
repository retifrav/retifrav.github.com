<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>All blog posts on Declaration of VAR</title>
    <link>https://retifrav.github.io/blog/</link>
    <description>Recent content in All blog posts on Declaration of VAR</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>retif</copyright>
    <lastBuildDate>Thu, 07 Jan 2021 13:30:42 +0100</lastBuildDate><atom:link href="https://retifrav.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Gollum - Git-based Markdown wiki</title>
      <link>https://retifrav.github.io/blog/2021/01/07/gollum-markdown-wiki/</link>
      <pubDate>Thu, 07 Jan 2021 13:30:42 +0100</pubDate>
      
      <guid>https://retifrav.github.io/blog/2021/01/07/gollum-markdown-wiki/</guid>
      <description>&lt;p&gt;We needed to create an internal knowledge base, preferably based on a wiki-engine. The requirements were:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;in-house hosting&lt;/li&gt;
&lt;li&gt;simple maintenance&lt;/li&gt;
&lt;li&gt;no vendor-lock - ideally, storing articles as plain-text files&lt;/li&gt;
&lt;li&gt;customization and styling&lt;/li&gt;
&lt;li&gt;not overloaded with gigabytes of fancy JS-frameworks&lt;/li&gt;
&lt;li&gt;version control&lt;/li&gt;
&lt;li&gt;Markdown markup&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;From my own researching and evaluating, there are very few wikis that meet all the requirements, and out of those &lt;a href=&#34;https://en.wikipedia.org/wiki/Gollum_Wiki&#34;&gt;Gollum&lt;/a&gt; seems to be the best.&lt;/p&gt;

&lt;div &gt;

    &lt;img class=&#34;image-post&#34; src=&#34;https://retifrav.github.io/blog/2021/01/07/gollum-markdown-wiki/images/gollum-markdown.png&#34; alt=&#34;Gollum wiki (original picture: https://www.deviantart.com/aronimo717/art/Hobbit-Gollum-431742580)&#34;/&gt;

&lt;/div&gt;

&lt;p&gt;Even though it has its own &lt;a href=&#34;https://github.com/gollum/gollum/wiki/Installation&#34;&gt;installation guide&lt;/a&gt;, for me that wasn&amp;rsquo;t enough, so here are my guides for Linux and Mac OS, plus some customizing and tweaking.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to manually upload VIVE VR screenshots to Steam</title>
      <link>https://retifrav.github.io/blog/2021/01/02/steam-vr-screenshots/</link>
      <pubDate>Sat, 02 Jan 2021 13:08:38 +0100</pubDate>
      
      <guid>https://retifrav.github.io/blog/2021/01/02/steam-vr-screenshots/</guid>
      <description>&lt;p&gt;I was playing &lt;a href=&#34;https://store.steampowered.com/app/546560/&#34;&gt;Half-Life: Alyx&lt;/a&gt; and wanted to take some screenshots. To my surprise, standard &lt;code&gt;F12&lt;/code&gt; screenshot button did nothing, so I had to use the screenshotting functionality from the HTC VIVE software. Annoying enough, screenshots made this way do not end up in Steam Screenshot Uploader, so I&amp;rsquo;ve spent quite some time till I found how can I add them there manually.&lt;/p&gt;

&lt;div &gt;

    &lt;img class=&#34;image-post&#34; src=&#34;https://retifrav.github.io/blog/2021/01/02/steam-vr-screenshots/images/steam-screenshot-uploader.jpg&#34; alt=&#34;Steam Screenshot Uploader&#34;/&gt;

&lt;/div&gt;

&lt;p&gt;Essentially, the process consists of cropping half of VR screenshots, sorting them by setting their modification timestamp attribute and placing them to the right folder.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Installing Qt without installer</title>
      <link>https://retifrav.github.io/blog/2020/12/04/qt-without-installer/</link>
      <pubDate>Fri, 04 Dec 2020 21:28:53 +0100</pubDate>
      
      <guid>https://retifrav.github.io/blog/2020/12/04/qt-without-installer/</guid>
      <description>&lt;p&gt;At some point (&lt;em&gt;beginning of 2020 year&lt;/em&gt;) &lt;a href=&#34;https://www.qt.io/download-qt-installer&#34;&gt;Qt installer&lt;/a&gt; started to require users to have &lt;a href=&#34;http://account.qt.io/&#34;&gt;Qt Account&lt;/a&gt; (&lt;em&gt;again&lt;/em&gt;), otherwise you can&amp;rsquo;t proceed with the installation. More details in the Qt&amp;rsquo;s official &lt;a href=&#34;https://www.qt.io/blog/qt-offering-changes-2020&#34;&gt;blog post&lt;/a&gt;.&lt;/p&gt;

&lt;div &gt;

    &lt;img class=&#34;image-post&#34; src=&#34;https://retifrav.github.io/blog/2020/12/04/qt-without-installer/images/qt-installer-account.png&#34; alt=&#34;Qt installer, account&#34;/&gt;

&lt;/div&gt;

&lt;p&gt;That&amp;rsquo;s something that &lt;a href=&#34;https://www.qt.io/blog/2015/05/04/new-unified-qt-online-installer-available&#34;&gt;already happened before&lt;/a&gt;, but back then community got really mad about it, so The Qt Company &lt;a href=&#34;https://www.qt.io/blog/2015/05/06/changing-qt-account-to-be-optional-in-the-online-installer&#34;&gt;reverted that&lt;/a&gt;, and installer started to work without Qt Account. And now they fucking did it again, and apparently this time community wasn&amp;rsquo;t that mad (&lt;em&gt;or there is nothing left of that community after all the stunts The Qt Company has been pulling over the past years&lt;/em&gt;).&lt;/p&gt;
&lt;p&gt;Anyway, I won&amp;rsquo;t tolerate such anal-probing, so The Qt Company (&lt;em&gt;or rather its management&lt;/em&gt;) can go fuck itself, and I&amp;rsquo;ll be just building Qt from sources - it&amp;rsquo;s not that scary as it sounds.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Finding optimal 7-Zip parameters for creating a ZIP archive</title>
      <link>https://retifrav.github.io/blog/2020/11/09/7zip-optimal-parameters/</link>
      <pubDate>Mon, 09 Nov 2020 20:01:30 +0100</pubDate>
      
      <guid>https://retifrav.github.io/blog/2020/11/09/7zip-optimal-parameters/</guid>
      <description>&lt;p&gt;We were packing our builds into ZIP archives for distribution right in TeamCity using its built-in &lt;a href=&#34;https://blog.jetbrains.com/teamcity/2010/02/artifact-packaging-with-teamcity/&#34;&gt;artifact packaging&lt;/a&gt;. But then we decided to try to do that explicitly with &lt;a href=&#34;https://www.7-zip.org/&#34;&gt;7-Zip&lt;/a&gt; as a dedicated build step, and that turned out to be a faster option, providing a better compression ratio too.&lt;/p&gt;

&lt;div &gt;

    &lt;img class=&#34;image-post&#34; src=&#34;https://retifrav.github.io/blog/2020/11/09/7zip-optimal-parameters/images/7zip-packing.png&#34; alt=&#34;7-Zip packing&#34;/&gt;

&lt;/div&gt;

&lt;p&gt;The only question remaining was finding the right balance between compression level and compression time.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>.NET Core Identity with PostgreSQL</title>
      <link>https://retifrav.github.io/blog/2020/10/17/dotnet-core-identity-postgresql/</link>
      <pubDate>Sat, 17 Oct 2020 13:32:15 +0200</pubDate>
      
      <guid>https://retifrav.github.io/blog/2020/10/17/dotnet-core-identity-postgresql/</guid>
      <description>&lt;p&gt;A couple of years ago I wrote &lt;a href=&#34;https://retifrav.github.io/blog/2018/03/20/csharp-dotnet-core-identity-mysql/&#34;&gt;a post&lt;/a&gt; about setting up Identity in .NET Core MVC application with MySQL. Now I am starting a new project, and this time I want to try using PostgreSQL.&lt;/p&gt;

&lt;div &gt;

    &lt;img class=&#34;image-post&#34; src=&#34;https://retifrav.github.io/blog/2020/10/17/dotnet-core-identity-postgresql/images/dotnet-core-identity-postgresql.png&#34; alt=&#34;.NET Core Identity PostgreSQL&#34;/&gt;

&lt;/div&gt;

&lt;p&gt;It is also a good timing to prepare for the upcoming &lt;a href=&#34;https://devblogs.microsoft.com/dotnet/introducing-net-5/&#34;&gt;.NET 5&lt;/a&gt;, which is about to release next month, so I decided to do it with &lt;a href=&#34;https://devblogs.microsoft.com/dotnet/announcing-net-5-0-rc-2/&#34;&gt;.NET 5.0 RC2&lt;/a&gt; right away.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>matplotlib animation on Mac OS</title>
      <link>https://retifrav.github.io/blog/2020/09/05/matplotlib-animation-macos/</link>
      <pubDate>Sat, 05 Sep 2020 16:02:02 +0200</pubDate>
      
      <guid>https://retifrav.github.io/blog/2020/09/05/matplotlib-animation-macos/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve got a weird problem with one of my Python scripts. It creates a chart with animation, and this animation works fine on Windows and Linux, but on Mac OS it just doesn&amp;rsquo;t show up. Here&amp;rsquo;s a video demonstration:&lt;/p&gt;






    &lt;video autoplay=&#34;yes&#34; controls=&#34;yes&#34; loop=&#34;yes&#34; preload=&#34;metadata&#34; class=&#34;video&#34;&gt;
        &lt;source src=&#34;https://retifrav.github.io/blog/2020/09/05/matplotlib-animation-macos/video/animation.mp4&#34; type=&#34;video/mp4&#34;&gt;
    &lt;/video&gt;
    
    &lt;p class=&#34;video-fallback&#34;&gt;If video doesnâ€™t play in your browser, you can download it &lt;a href=&#34;https://retifrav.github.io/blog/2020/09/05/matplotlib-animation-macos/video/animation.mp4&#34;&gt;here&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Data compression in IIS, Apache and NGINX</title>
      <link>https://retifrav.github.io/blog/2020/08/12/compression-in-iis-apache-nginx/</link>
      <pubDate>Wed, 12 Aug 2020 15:27:42 +0200</pubDate>
      
      <guid>https://retifrav.github.io/blog/2020/08/12/compression-in-iis-apache-nginx/</guid>
      <description>&lt;p&gt;Some of our users are residing in areas with very slow or/and metered internet connection, so the amount of data transferred is very important to them. And since web servers do support data compression, enabling it can certainly improve the situation for such users.&lt;/p&gt;

&lt;div &gt;

    &lt;img class=&#34;image-post&#34; src=&#34;https://retifrav.github.io/blog/2020/08/12/compression-in-iis-apache-nginx/images/web-servers-compression.png&#34; alt=&#34;Web servers compression&#34;/&gt;

&lt;/div&gt;

&lt;p&gt;We took IIS, Apache and NGINX and ran some tests to see how compression is configured in each of them and to compare how well do they do it.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>TeamCity Prometheus metrics in Grafana</title>
      <link>https://retifrav.github.io/blog/2020/07/14/teamcity-prometheus-metrics-in-grafana/</link>
      <pubDate>Tue, 14 Jul 2020 19:16:58 +0200</pubDate>
      
      <guid>https://retifrav.github.io/blog/2020/07/14/teamcity-prometheus-metrics-in-grafana/</guid>
      <description>&lt;p&gt;Since we added a &lt;a href=&#34;https://grafana.com&#34;&gt;Grafana&lt;/a&gt; instance to our infrastructure, we started visualizing absolutely every single thing with it. So no wonder that eventually we turned our eyes to TeamCity.&lt;/p&gt;

&lt;div &gt;

    &lt;img class=&#34;image-post&#34; src=&#34;https://retifrav.github.io/blog/2020/07/14/teamcity-prometheus-metrics-in-grafana/images/grafana-teamcity.png&#34; alt=&#34;TeamCity metrics in Grafana&#34;/&gt;

&lt;/div&gt;

&lt;p&gt;In &lt;a href=&#34;https://blog.jetbrains.com/teamcity/2019/09/teamcity-2019-2-eap2-is-out/&#34;&gt;2019.2 release&lt;/a&gt; TeamCity started exposing its &lt;a href=&#34;https://www.jetbrains.com/help/teamcity/what-s-new-in-teamcity-2019-2.html#WhatsNewinTeamCity2019.2-Metricsreporting&#34;&gt;metrics&lt;/a&gt; in &lt;a href=&#34;https://prometheus.io&#34;&gt;Prometheus&lt;/a&gt; format, and that&amp;rsquo;s how Grafana can get those, as Prometheus is one of its &lt;a href=&#34;https://grafana.com/docs/grafana/latest/features/datasources/&#34;&gt;supported data sources&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Jupyter Notebook on a subdomain of your website</title>
      <link>https://retifrav.github.io/blog/2020/05/27/jupyter-notebook-nginx/</link>
      <pubDate>Wed, 27 May 2020 14:45:46 +0200</pubDate>
      
      <guid>https://retifrav.github.io/blog/2020/05/27/jupyter-notebook-nginx/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Project_Jupyter#Jupyter_Notebook&#34;&gt;Jupyter Notebook&lt;/a&gt; is kind of a Python (&lt;em&gt;and &lt;a href=&#34;https://github.com/jupyter/jupyter/wiki/Jupyter-kernels&#34;&gt;some other&lt;/a&gt; languages&lt;/em&gt;) sandbox, where you can mix text (&lt;em&gt;Markdown&lt;/em&gt;) with code blocks and &amp;ldquo;run&amp;rdquo; all that in a web-browser. So it&amp;rsquo;s like running Python interpreter in &lt;a href=&#34;https://docs.python.org/3/tutorial/interpreter.html#interactive-mode&#34;&gt;interactive mode&lt;/a&gt;, but more convenient and user-friendly.&lt;/p&gt;

&lt;div &gt;

    &lt;img class=&#34;image-post&#34; src=&#34;https://retifrav.github.io/blog/2020/05/27/jupyter-notebook-nginx/images/notebook.png&#34; alt=&#34;Jupyter Notebook&#34;/&gt;

&lt;/div&gt;

&lt;p&gt;So, here&amp;rsquo;s the plan:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;install and run a local instance of Jupyter Notebook on Linux server
&lt;ul&gt;
&lt;li&gt;local here means that Jupyter instance itself will be bound to &lt;code&gt;localhost&lt;/code&gt; (&lt;em&gt;not available from the internet&lt;/em&gt;)&lt;/li&gt;
&lt;li&gt;also create a systemd service&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;interface it with the internet via NGINX as a reverse proxy
&lt;ul&gt;
&lt;li&gt;using HTTPS, of course, so the existing certificate needs to be extended&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;host it on a subdomain of existing website, so there will be a new DNS record&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Visitors analytics with GoAccess</title>
      <link>https://retifrav.github.io/blog/2020/05/20/visitors-analytics-with-goaccess/</link>
      <pubDate>Wed, 20 May 2020 20:44:09 +0200</pubDate>
      
      <guid>https://retifrav.github.io/blog/2020/05/20/visitors-analytics-with-goaccess/</guid>
      <description>&lt;p&gt;Like I already mentioned in my &lt;a href=&#34;https://retifrav.github.io/blog/2018/07/29/dotnet-core-server-side-analytics/&#34;&gt;other post&lt;/a&gt; about server-side visitors analytics with .NET Core middleware, if you are relying only on Google Analytics, then you are missing a good portion of data about your visitors.&lt;/p&gt;
&lt;p&gt;Recently I discovered one more way to analyze visitors data - by using &lt;a href=&#34;https://goaccess.io&#34;&gt;GoAccess&lt;/a&gt; tool (&lt;em&gt;and its nice web-reports&lt;/em&gt;):&lt;/p&gt;

&lt;div &gt;

    &lt;img class=&#34;image-post&#34; src=&#34;https://retifrav.github.io/blog/2020/05/20/visitors-analytics-with-goaccess/images/dashboard.png&#34; alt=&#34;GoAccess dashboard&#34;/&gt;

&lt;/div&gt;

&lt;p&gt;What&amp;rsquo;s especially great about this tool is that it analyzes web-server access logs, so it is the most trustworthy and &amp;ldquo;closest to reality&amp;rdquo; data about your visitors that you can possibly ever get.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
