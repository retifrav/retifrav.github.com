<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>unsolved on Declaration of VAR</title>
    <link>https://retifrav.github.io/tags/unsolved/</link>
    <description>Recent content in unsolved on Declaration of VAR</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>retif</copyright>
    <lastBuildDate>Sun, 03 Nov 2019 16:14:07 +0100</lastBuildDate><atom:link href="https://retifrav.github.io/tags/unsolved/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>NGINX, uWSGI and Python scripts</title>
      <link>https://retifrav.github.io/blog/2019/11/03/nginx-uwsgi-python-scripts/</link>
      <pubDate>Sun, 03 Nov 2019 16:14:07 +0100</pubDate>
      
      <guid>https://retifrav.github.io/blog/2019/11/03/nginx-uwsgi-python-scripts/</guid>
      <description>&lt;p&gt;You have a static HTML page with a form on it. And you want this form to be processed by a Python script when submitted. And you serve your page with NGINX. To make all that work you will also need an application server such as &lt;a href=&#34;https://uwsgi-docs.readthedocs.io/en/latest/&#34;&gt;uWSGI&lt;/a&gt;.&lt;/p&gt;

&lt;div &gt;

    &lt;img class=&#34;image-post&#34; src=&#34;https://retifrav.github.io/blog/2019/11/03/nginx-uwsgi-python-scripts/images/nginx-uwsgi.png&#34; alt=&#34;NGINX and uWSGI&#34;/&gt;

&lt;/div&gt;

&lt;p&gt;Let&amp;rsquo;s see, how it&amp;rsquo;s done.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Chunked upload to Twitter with C# / .NET Core</title>
      <link>https://retifrav.github.io/blog/2019/08/22/twitter-chunked-upload-video/</link>
      <pubDate>Thu, 22 Aug 2019 16:19:40 +0200</pubDate>
      
      <guid>https://retifrav.github.io/blog/2019/08/22/twitter-chunked-upload-video/</guid>
      <description>&lt;p&gt;While images can be &lt;a href=&#34;https://retifrav.github.io/blog/2017/11/24/csharp-dotnet-core-publish-twitter/&#34;&gt;uploaded to Twitter&lt;/a&gt; in one request, uploading a video is a different story.&lt;/p&gt;

&lt;div &gt;

    &lt;img class=&#34;image-post&#34; src=&#34;https://retifrav.github.io/blog/2019/08/22/twitter-chunked-upload-video/images/dotnet-core-twitter-logo.png&#34; alt=&#34;.NET Core, Twitter&#34;/&gt;

&lt;/div&gt;

&lt;p&gt;And although I&amp;rsquo;ve managed to implement it, I am not entirely happy with the result, and later you will see why is that.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Custom CSS in SharePoint</title>
      <link>https://retifrav.github.io/blog/2019/05/04/sharepoint-custom-css/</link>
      <pubDate>Sat, 04 May 2019 14:29:38 +0200</pubDate>
      
      <guid>https://retifrav.github.io/blog/2019/05/04/sharepoint-custom-css/</guid>
      <description>&lt;p&gt;What an ugly, tremendously complex, absolutely not-intuitive, horribly slow and simply retarded puddle of vomit this fucking &lt;a href=&#34;https://en.wikipedia.org/wiki/SharePoint&#34;&gt;SharePoint&lt;/a&gt; is. I hate it will all the fibers of my soul.&lt;/p&gt;
&lt;p&gt;Unfortunately, I have to deal with this crap at work. And the very first thing I wanted to do was to add a custom CSS file, so our pages wouldn&amp;rsquo;t look like total shit.&lt;/p&gt;

&lt;div &gt;

    &lt;img class=&#34;image-post&#34; src=&#34;https://retifrav.github.io/blog/2019/05/04/sharepoint-custom-css/images/styling-sharepoint.png&#34; alt=&#34;Styling SharePoint&#34;/&gt;

&lt;/div&gt;

&lt;p&gt;There is an &lt;a href=&#34;https://docs.microsoft.com/en-us/sharepoint/dev/solution-guidance/use-css-to-brand-pages&#34;&gt;official documentation&lt;/a&gt; on the subject, but it didn&amp;rsquo;t help me much (&lt;em&gt;if at all&lt;/em&gt;).&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
