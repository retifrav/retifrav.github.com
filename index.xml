<rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:media="http://search.yahoo.com/mrss/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:georss="http://www.georss.org/georss">
  <channel>
    <title>Declaration of VAR</title>
    <link>https://retifrav.github.io/</link>
    <description>Recent content of Declaration of VAR</description>
    <language>en-us</language>
    <copyright>retif</copyright>
    
    <lastBuildDate>Thu, 01 Apr 2021 21:14:20 +0200</lastBuildDate>
    
    
        <atom:link href="https://retifrav.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Building RetroShare on Mac OS</title>
      <link>https://retifrav.github.io/blog/2021/04/01/macos-building-retroshare/</link>
      <pubDate>Thu, 01 Apr 2021 21:14:20 +0200</pubDate>
      <guid>https://retifrav.github.io/blog/2021/04/01/macos-building-retroshare/</guid>
      <description><![CDATA[New post: Building RetroShare on Mac OS]]></description>
      <content:encoded><![CDATA[<h2>Building RetroShare on Mac OS</h2><p>A couple of weeks ago <a href="https://retroshare.cc/">RetroShare</a> has released version <a href="https://retroshareteam.wordpress.com/2021/03/15/release-notes-for-v0-6-6/">0.6.6</a>. But while download page offers quite a variety of pre-built packages for different operating systems, there is no 0.6.6 build for Mac OS (<em>only 0.6.5 is available</em>).</p>



    <img class="image-post" src="/blog/2021/04/01/macos-building-retroshare/images/retroshare-splash.png" alt="RetroShare splash">


<p>I found this peculiar, so I decided to try to build it from sources myself. It also seemed like a good opportunity to finally try RetroShare, as it has been available for more than 15 years, and I&rsquo;ve heard many good things about it.</p>]]></content:encoded>
    </item>
    
    <item>
      <title>Creating a C&#43;&#43; library with CMake</title>
      <link>https://retifrav.github.io/blog/2021/03/08/cmake-cpp-library/</link>
      <pubDate>Mon, 08 Mar 2021 20:41:56 +0100</pubDate>
      <guid>https://retifrav.github.io/blog/2021/03/08/cmake-cpp-library/</guid>
      <description><![CDATA[New post: Creating a C&#43;&#43; library with CMake]]></description>
      <content:encoded><![CDATA[<h2>Creating a C&#43;&#43; library with CMake</h2><p>All of the sudden I found myself in a situation that I have been successfully avoiding so far - I needed to make a C++ library with CMake.</p>



    <img class="image-post" src="/blog/2021/03/08/cmake-cpp-library/images/cmake-library.png" alt="CMake and a library">


<p>To clarify, this will be about so-called <a href="https://cmake.org/cmake/help/latest/command/add_library.html#normal-libraries">normal</a> kind of library.</p>]]></content:encoded>
    </item>
    
    <item>
      <title>Постоянный вид на жительство в Норвегии</title>
      <link>https://retifrav.github.io/blog/2021/02/21/norway-permanent-residence-permit/</link>
      <pubDate>Sun, 21 Feb 2021 18:34:31 +0100</pubDate>
      <guid>https://retifrav.github.io/blog/2021/02/21/norway-permanent-residence-permit/</guid>
      <description><![CDATA[New post: Постоянный вид на жительство в Норвегии]]></description>
      <content:encoded><![CDATA[<h2>Постоянный вид на жительство в Норвегии</h2><p>Наконец-то прошло больше трёх лет как <a href="/blog/2018/01/03/twenty-months-in-oslo-norway/">я в Норвегии</a>, и стало можно получить <em>постоянный</em> вид на жительство (<em>в оригинале &ldquo;permanent oppholdstillatelse&rdquo; или &ldquo;permanent residence permit&rdquo;</em>).</p>



    <img class="image-post" src="/blog/2021/02/21/norway-permanent-residence-permit/images/norwegian-permanent-residence-permit.jpg" alt="Норвежский постоянный вид на жительство">


<p>Забегая вперёд, самое сложное (<em>долгое</em>) во всём процессе это прохождение необходимых курсов по норвежскому языку. Разумеется, помимо ожидания пока наберётся минимально необходимый срок проживания в Норвегии.</p>]]></content:encoded>
    </item>
    
    <item>
      <title>Gollum - Git-based Markdown wiki</title>
      <link>https://retifrav.github.io/blog/2021/01/07/gollum-markdown-wiki/</link>
      <pubDate>Thu, 07 Jan 2021 13:30:42 +0100</pubDate>
      <guid>https://retifrav.github.io/blog/2021/01/07/gollum-markdown-wiki/</guid>
      <description><![CDATA[New post: Gollum - Git-based Markdown wiki]]></description>
      <content:encoded><![CDATA[<h2>Gollum - Git-based Markdown wiki</h2><p>We needed to create an internal knowledge base, preferably based on a wiki-engine. The requirements were:</p>
<ul>
<li>in-house hosting</li>
<li>simple maintenance</li>
<li>no vendor-lock - ideally, storing articles as plain-text files</li>
<li>customization and styling</li>
<li>not overloaded with gigabytes of fancy JS-frameworks</li>
<li>version control</li>
<li>Markdown markup</li>
</ul>
<p>From my own researching and evaluating, there are very few wikis that meet all the requirements, and out of those <a href="https://en.wikipedia.org/wiki/Gollum_Wiki">Gollum</a> seems to be the best.</p>



    <img class="image-post" src="/blog/2021/01/07/gollum-markdown-wiki/images/gollum-markdown.png" alt="Gollum wiki (original picture: https://www.deviantart.com/aronimo717/art/Hobbit-Gollum-431742580)">


<p>Even though it has its own <a href="https://github.com/gollum/gollum/wiki/Installation">installation guide</a>, for me that wasn&rsquo;t enough, so here are my guides for Linux and Mac OS, plus some customizing and tweaking.</p>]]></content:encoded>
    </item>
    
    <item>
      <title>How to manually upload VIVE VR screenshots to Steam</title>
      <link>https://retifrav.github.io/blog/2021/01/02/steam-vr-screenshots/</link>
      <pubDate>Sat, 02 Jan 2021 13:08:38 +0100</pubDate>
      <guid>https://retifrav.github.io/blog/2021/01/02/steam-vr-screenshots/</guid>
      <description><![CDATA[New post: How to manually upload VIVE VR screenshots to Steam]]></description>
      <content:encoded><![CDATA[<h2>How to manually upload VIVE VR screenshots to Steam</h2><p>I was playing <a href="https://store.steampowered.com/app/546560/">Half-Life: Alyx</a> and wanted to take some screenshots. To my surprise, standard <code>F12</code> screenshot button did nothing, so I had to use the screenshotting functionality from the HTC VIVE software. Annoying enough, screenshots made this way do not end up in Steam Screenshot Uploader, so I&rsquo;ve spent quite some time till I found how can I add them there manually.</p>



    <img class="image-post" src="/blog/2021/01/02/steam-vr-screenshots/images/steam-screenshot-uploader.jpg" alt="Steam Screenshot Uploader">


<p>Essentially, the process consists of cropping half of VR screenshots, sorting them by setting their modification timestamp attribute and placing them to the right folder.</p>]]></content:encoded>
    </item>
    
    <item>
      <title>Installing Qt without installer</title>
      <link>https://retifrav.github.io/blog/2020/12/04/qt-without-installer/</link>
      <pubDate>Fri, 04 Dec 2020 21:28:53 +0100</pubDate>
      <guid>https://retifrav.github.io/blog/2020/12/04/qt-without-installer/</guid>
      <description><![CDATA[New post: Installing Qt without installer]]></description>
      <content:encoded><![CDATA[<h2>Installing Qt without installer</h2><p>At some point (<em>beginning of 2020 year</em>) <a href="https://www.qt.io/download-qt-installer">Qt installer</a> started to require users to have <a href="http://account.qt.io/">Qt Account</a> (<em>again</em>), otherwise you can&rsquo;t proceed with the installation. More details in the Qt&rsquo;s official <a href="https://www.qt.io/blog/qt-offering-changes-2020">blog post</a>.</p>



    <img class="image-post" src="/blog/2020/12/04/qt-without-installer/images/qt-installer-account.png" alt="Qt installer, account">


<p>That&rsquo;s something that <a href="https://www.qt.io/blog/2015/05/04/new-unified-qt-online-installer-available">already happened before</a>, but back then community got really mad about it, so The Qt Company <a href="https://www.qt.io/blog/2015/05/06/changing-qt-account-to-be-optional-in-the-online-installer">reverted that</a>, and installer started to work without Qt Account. And now they fucking did it again, and apparently this time community wasn&rsquo;t that mad (<em>or there is nothing left of that community after all the stunts The Qt Company has been pulling over the past years</em>).</p>
<p>Anyway, I won&rsquo;t tolerate such anal-probing, so The Qt Company (<em>or rather its management</em>) can go fuck itself, and I&rsquo;ll be just building Qt from sources - it&rsquo;s not that scary as it sounds.</p>]]></content:encoded>
    </item>
    
    <item>
      <title>Finding optimal 7-Zip parameters for creating a ZIP archive</title>
      <link>https://retifrav.github.io/blog/2020/11/09/7zip-optimal-parameters/</link>
      <pubDate>Mon, 09 Nov 2020 20:01:30 +0100</pubDate>
      <guid>https://retifrav.github.io/blog/2020/11/09/7zip-optimal-parameters/</guid>
      <description><![CDATA[New post: Finding optimal 7-Zip parameters for creating a ZIP archive]]></description>
      <content:encoded><![CDATA[<h2>Finding optimal 7-Zip parameters for creating a ZIP archive</h2><p>We were packing our builds into ZIP archives for distribution right in TeamCity using its built-in <a href="https://blog.jetbrains.com/teamcity/2010/02/artifact-packaging-with-teamcity/">artifact packaging</a>. But then we decided to try to do that explicitly with <a href="https://www.7-zip.org/">7-Zip</a> as a dedicated build step, and that turned out to be a faster option, providing a better compression ratio too.</p>



    <img class="image-post" src="/blog/2020/11/09/7zip-optimal-parameters/images/7zip-packing.png" alt="7-Zip packing">


<p>The only question remaining was finding the right balance between compression level and compression time.</p>]]></content:encoded>
    </item>
    
    <item>
      <title>.NET Core Identity with PostgreSQL</title>
      <link>https://retifrav.github.io/blog/2020/10/17/dotnet-core-identity-postgresql/</link>
      <pubDate>Sat, 17 Oct 2020 13:32:15 +0200</pubDate>
      <guid>https://retifrav.github.io/blog/2020/10/17/dotnet-core-identity-postgresql/</guid>
      <description><![CDATA[New post: .NET Core Identity with PostgreSQL]]></description>
      <content:encoded><![CDATA[<h2>.NET Core Identity with PostgreSQL</h2><p>A couple of years ago I wrote <a href="/blog/2018/03/20/csharp-dotnet-core-identity-mysql/">a post</a> about setting up Identity in .NET Core MVC application with MySQL. Now I am starting a new project, and this time I want to try using PostgreSQL.</p>



    <img class="image-post" src="/blog/2020/10/17/dotnet-core-identity-postgresql/images/dotnet-core-identity-postgresql.png" alt=".NET Core Identity PostgreSQL">


<p>It is also a good timing to prepare for the upcoming <a href="https://devblogs.microsoft.com/dotnet/introducing-net-5/">.NET 5</a>, which is about to release next month, so I decided to do it with <a href="https://devblogs.microsoft.com/dotnet/announcing-net-5-0-rc-2/">.NET 5.0 RC2</a> right away.</p>]]></content:encoded>
    </item>
    
    <item>
      <title>matplotlib animation on Mac OS</title>
      <link>https://retifrav.github.io/blog/2020/09/05/matplotlib-animation-macos/</link>
      <pubDate>Sat, 05 Sep 2020 16:02:02 +0200</pubDate>
      <guid>https://retifrav.github.io/blog/2020/09/05/matplotlib-animation-macos/</guid>
      <description><![CDATA[New post: matplotlib animation on Mac OS]]></description>
      <content:encoded><![CDATA[<h2>matplotlib animation on Mac OS</h2><p>I&rsquo;ve got a weird problem with one of my Python scripts. It creates a chart with animation, and this animation works fine on Windows and Linux, but on Mac OS it just doesn&rsquo;t show up. Here&rsquo;s a video demonstration:</p>






    <video autoplay="yes" controls="yes" loop="yes" preload="metadata" class="video">
        <source src="/blog/2020/09/05/matplotlib-animation-macos/video/animation.mp4" type="video/mp4">
    </video>
    
    <p class="video-fallback">If video doesn’t play in your browser, you can download it <a href="/blog/2020/09/05/matplotlib-animation-macos/video/animation.mp4">here</a></p>]]></content:encoded>
    </item>
    
    <item>
      <title>Data compression in IIS, Apache and NGINX</title>
      <link>https://retifrav.github.io/blog/2020/08/12/compression-in-iis-apache-nginx/</link>
      <pubDate>Wed, 12 Aug 2020 15:27:42 +0200</pubDate>
      <guid>https://retifrav.github.io/blog/2020/08/12/compression-in-iis-apache-nginx/</guid>
      <description><![CDATA[New post: Data compression in IIS, Apache and NGINX]]></description>
      <content:encoded><![CDATA[<h2>Data compression in IIS, Apache and NGINX</h2><p>Some of our users are residing in areas with very slow or/and metered internet connection, so the amount of data transferred is very important to them. And since web servers do support data compression, enabling it can certainly improve the situation for such users.</p>



    <img class="image-post" src="/blog/2020/08/12/compression-in-iis-apache-nginx/images/web-servers-compression.png" alt="Web servers compression">


<p>We took IIS, Apache and NGINX and ran some tests to see how compression is configured in each of them and to compare how well do they do it.</p>]]></content:encoded>
    </item>
    
    <item>
      <title>TeamCity Prometheus metrics in Grafana</title>
      <link>https://retifrav.github.io/blog/2020/07/14/teamcity-prometheus-metrics-in-grafana/</link>
      <pubDate>Tue, 14 Jul 2020 19:16:58 +0200</pubDate>
      <guid>https://retifrav.github.io/blog/2020/07/14/teamcity-prometheus-metrics-in-grafana/</guid>
      <description><![CDATA[New post: TeamCity Prometheus metrics in Grafana]]></description>
      <content:encoded><![CDATA[<h2>TeamCity Prometheus metrics in Grafana</h2><p>Since we added a <a href="https://grafana.com">Grafana</a> instance to our infrastructure, we started visualizing absolutely every single thing with it. So no wonder that eventually we turned our eyes to TeamCity.</p>



    <img class="image-post" src="/blog/2020/07/14/teamcity-prometheus-metrics-in-grafana/images/grafana-teamcity.png" alt="TeamCity metrics in Grafana">


<p>In <a href="https://blog.jetbrains.com/teamcity/2019/09/teamcity-2019-2-eap2-is-out/">2019.2 release</a> TeamCity started exposing its <a href="https://www.jetbrains.com/help/teamcity/what-s-new-in-teamcity-2019-2.html#WhatsNewinTeamCity2019.2-Metricsreporting">metrics</a> in <a href="https://prometheus.io">Prometheus</a> format, and that&rsquo;s how Grafana can get those, as Prometheus is one of its <a href="https://grafana.com/docs/grafana/latest/features/datasources/">supported data sources</a>.</p>]]></content:encoded>
    </item>
    
  </channel>
</rss>
